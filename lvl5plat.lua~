--dependencies
require('audio')
require('utils')
sti = require('stibg')


--some required constants
camS = -0
camsp = 25
gravity = 7
Jump_v = -250
pDY = 0
render_val = 0
i = 1

--background inclusion
bg = Background

--de-bloats some conditional statements
f = Features
j = Jump

--the real assets
player = love.graphics.newImage("assets/world/player.png")
p_height = love.graphics.getWidth(player)
	

--particle system
img = love.graphics.newImage('l50.png')
psystem = love.graphics.newParticleSystem(img, 32)
psystem:setParticleLifetime(1, 2)
psystem:setEmissionRate(30)
psystem:setSizeVariation(1)
psystem:setLinearAcceleration(-20, -20, 20, 20)
psystem:setColors(1, 1, 1, 1, 1, 1, 1, 0)



--tilemaps
platform = {sti('assets/world/lvl5-0.lua'), sti('assets/world/lvl5-1.lua')}
pY = 330


--sounds
sfx = Sfx


--some presets
love.window.setMode(640, 480, {fullscreen = false, vsync = -1, resizable = false, centered = true})
love.window.setTitle('Untitled Platformer Game')




--key config
function love.keypressed(key)
	if key == 'escape' then
		love.event.quit()
	end
	if key == 'c' then
		dofile("lvl2plat.lua")
	end
	if key == 'r' then
		dofile("main.lua")
	end
	if key == 'up' then
		Jump_v = -150
		pDY = Jump_v
		sfx:play(4)
	end
end


--the real thing happens here
function love.draw()
	ncamS = -math.floor(camS)

	
	love.graphics.draw(player, 100, pY+5)
	love.graphics.draw(psystem, 200, 200)
	love.graphics.print(pY, 0, 0)
	love.graphics.print(ncamS, 0, 10)
	
	if ncamS >= -3000 and ncamS <= 0 then
		love.graphics.translate(ncamS, 0)
	end
	
	platform[1]:draw(0, 400)
	
	if pY > 335 then
		pY = 335
		pDY = 0
	end
end




--updation
function love.update(dt)
	if love.keyboard.isDown("left") then
		camS = camS - camsp*dt
	elseif love.keyboard.isDown("right") then
		camS = camS + camsp*dt
	end
	
	psystem:update(dt)
	pDY = pDY + gravity
	pY = pY + pDY*dt
	i = i + 1
	if i > 8 then
		i = 1
	end
end


